version: "3.7"

services:
  elasticsearch:
    image: elasticsearch:7.4.2
    environment:
      - "discovery.type=single-node"
      - ELASTIC_PASSWORD=changethisinproduction
      - xpack.security.enabled=true
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization,Access-Control-Allow-Headers,Accept
      - http.cors.allow-credentials=true
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    networks:
      - elasticnet
    restart: on-failure

  kibana:
    image: kibana:7.4.2
    networks:
      - elasticnet
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    restart: on-failure
  
  kibana_dashboard:
    image: kibana:7.4.2
    networks:
      - elasticnet
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana_dashboard/kibana.yml:/usr/share/kibana/config/kibana.yml
    restart: on-failure

  mysql:
    build:
      context: ./mysql
      dockerfile: mysql.Dockerfile
    environment:
    - "MYSQL_ROOT_PASSWORD=my-secret-pw"
    - "MYSQL_DATABASE=oerhoernchen_db"
    - "MYSQL_USER=oerhoernchen"
    - "MYSQL_PASSWORD=oerhoernchenpw"
    networks: 
      - elasticnet
    ports:
      - "3306:3306"
    restart: always

  logstash:
    build:
      context: ./logstash_mysql
      dockerfile: logstash_mysql.Dockerfile
    networks:
      - elasticnet
    # healthcheck:
    #   test: ["CMD", "curl", "--fail", "http://elasticsearch:9200/", "-H", "'Content-Type: application/json'", "-H", "'Authorization: Basic ZWxhc3RpYzpjaGFuZ2V0aGlzaW5wcm9kdWN0aW9u'", "||", "exit 1"]
    #   interval: 1m30s
    #   timeout: 60s
    #   retries: 3
    depends_on:
      - elasticsearch
      - mysql
      - kibana
    restart: on-failure

  indexer:
    build:
      context: ./indexer
      dockerfile: indexer.Dockerfile
    depends_on:
      - elasticsearch
    networks:
      - elasticnet
    # healthcheck:
    #   test: ["CMD", "curl", "--fail", "http://elasticsearch:9200/", "-H", "'Content-Type: application/json'", "-H", "'Authorization: Basic ZWxhc3RpYzpjaGFuZ2V0aGlzaW5wcm9kdWN0aW9u'", "||", "exit 1"]
    #   interval: 1m30s
    #   timeout: 60s
    #   retries: 3
    deploy:
      restart_policy:
        condition: none
        delay: 60s
    restart: always

  vue_hoernchen:
    build:
      context: ./vue_hoernchen
      dockerfile: vue_hoernchen.Dockerfile
    ports:
      - "80:80"
    networks:
      - elasticnet
    depends_on:
      - elasticsearch
      - mysql
      - kibana
    restart: on-failure

networks:
  elasticnet: