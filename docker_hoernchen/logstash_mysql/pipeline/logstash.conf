input {
    jdbc {
        jdbc_connection_string => "jdbc:mysql://mysql:3306/oerhoernchen_db"
        jdbc_user => "oerhoernchen"
        jdbc_password => "oerhoernchenpw"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        statement => "SELECT * FROM hoou_tb WHERE date_scraped >:sql_last_value"
        use_column_value => true
        tracking_column => date_scraped
        tracking_column_type => "timestamp"
        schedule => "*/5 * * * *"
        type => "hoou"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://mysql:3306/oerhoernchen_db"
        jdbc_user => "oerhoernchen"
        jdbc_password => "oerhoernchenpw"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        statement => "SELECT * FROM oerinfo_tb WHERE date_scraped >:sql_last_value"
        use_column_value => true
        tracking_column => date_scraped
        tracking_column_type => "timestamp"
        schedule => "*/5 * * * *"
        type => "oerinfo"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://mysql:3306/oerhoernchen_db"
        jdbc_user => "oerhoernchen"
        jdbc_password => "oerhoernchenpw"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        statement => "SELECT * FROM hhu_tb WHERE date_scraped >:sql_last_value"
        use_column_value => true
        tracking_column => date_scraped
        tracking_column_type => "timestamp"
        schedule => "*/5 * * * *"
        type => "hhu"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://mysql:3306/oerhoernchen_db"
        jdbc_user => "oerhoernchen"
        jdbc_password => "oerhoernchenpw"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        statement => "SELECT * FROM openrub_tb WHERE date_scraped >:sql_last_value"
        use_column_value => true
        tracking_column => date_scraped
        tracking_column_type => "timestamp"
        schedule => "*/5 * * * *"
        type => "openrub"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://mysql:3306/oerhoernchen_db"
        jdbc_user => "oerhoernchen"
        jdbc_password => "oerhoernchenpw"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        statement => "SELECT * FROM digill_tb WHERE date_scraped >:sql_last_value"
        use_column_value => true
        tracking_column => date_scraped
        tracking_column_type => "timestamp"
        schedule => "*/5 * * * *"
        type => "digill"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://mysql:3306/oerhoernchen_db"
        jdbc_user => "oerhoernchen"
        jdbc_password => "oerhoernchenpw"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        statement => "SELECT * FROM zoerr_tb WHERE date_scraped >:sql_last_value"
        use_column_value => true
        tracking_column => date_scraped
        tracking_column_type => "timestamp"
        schedule => "*/5 * * * *"
        type => "zoerr"
    }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://mysql:3306/oerhoernchen_db"
        jdbc_user => "oerhoernchen"
        jdbc_password => "oerhoernchenpw"
        jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        statement => "SELECT * FROM tibav_tb WHERE date_scraped >:sql_last_value"
        use_column_value => true
        tracking_column => date_scraped
        tracking_column_type => "timestamp"
        schedule => "*/5 * * * *"
        type => "tibav"
    }
}

output {
    stdout { codec => json_lines }
    elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "%{type}"
        action => update
        document_id => "%{[url]}"
        doc_as_upsert => true
        user => "elastic"
        password => "changethisinproduction"
    }
}